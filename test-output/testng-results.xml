<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="88" passed="71" failed="17" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-10T17:24:04 PDT" name="Default suite" finished-at="2023-09-10T17:24:11 PDT" duration-ms="7030">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-09-10T17:24:04 PDT" name="Default test" finished-at="2023-09-10T17:24:11 PDT" duration-ms="7030">
      <class name="testrunners.TestNGTestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:04 PDT" name="setUpClass" finished-at="2023-09-10T17:24:05 PDT" duration-ms="888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@38bb9d7a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate response time from dashboard page to attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate the header of the page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify LMS title"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify delete icon below the header"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate the broken link"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify search bar on the class page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the alignment of the Manage Attendance header"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate text in manage attendancepage"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify data table on the attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:05 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:06 PDT" duration-ms="1249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify add new Attendance button  on Attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:06 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify data table on the attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:06 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify data table on the attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:06 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Edit icon in the data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:06 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify data table on the attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:06 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify data table on the attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Edit icon when no data in the table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify delete icon in the data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify delete icon when no data in the table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify sort icon in the data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify check box in the data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate the number entries displaying"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Pagination control below the data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate footer text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Attendance Page verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify all label text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify dropdown box is present"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify close button in attendance details popup window"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the alignment of the close button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the text on first dropdown select a program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the text on second dropdown select class name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the text on third dropdown select students"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the text on fourth dropdown select attendance"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify all the text inside the dropdown box is gray color"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify save button is present"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify cancel button is present"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify order of the label in attendance details page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup window verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate all program name is reflecting in the dropdown"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate all class name  is reflecting in the dropdown"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate attendance field dropdown all mandatory keywords"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify spellings in the attendance field drop down"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate date picker"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validate date picker should be correct format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate right arrow in data picker to navigate to next month"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate left arrow in data picker to navigate to previous month"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate current date is highlighted in the date picker"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate selected date is highlighted in the date picker"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Attendance details popup verification"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without class name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without attendances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without student name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without attendance date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance by selecting future date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to update  attendance data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to update attendance data without program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to update attendance data without class name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without student name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without attendances"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance data without attendance date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate admin able to create new attendance by selecting future date"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify next page is enabled in pagination"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify next page is disabled in pagination"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Adding and Editing New Attendance"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify Delete attendance alert"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete attendance validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify  accept enabled in alert"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete attendance validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify reject enabled in alert"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete attendance validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="311" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate accept in alert"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete attendance validation"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is in delete alert after clicking row level delete button on manage attendance page' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is in delete alert after clicking row level delete button on manage attendance page")
public void admin_is_in_delete_alert_after_clicking_row_level_delete_button_on_manage_attendance_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is in delete alert after clicking row level delete button on manage attendance page' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is in delete alert after clicking row level delete button on manage attendance page")
public void admin_is_in_delete_alert_after_clicking_row_level_delete_button_on_manage_attendance_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="308" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate reject in alert"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete attendance validation"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is in delete alert after clicking row level delete button on manage attendance page' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is in delete alert after clicking row level delete button on manage attendance page")
public void admin_is_in_delete_alert_after_clicking_row_level_delete_button_on_manage_attendance_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is in delete alert after clicking row level delete button on manage attendance page' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is in delete alert after clicking row level delete button on manage attendance page")
public void admin_is_in_delete_alert_after_clicking_row_level_delete_button_on_manage_attendance_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify delete multiple class button is enabled"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify tick mark is visible after clicking on check box for single data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin able to click multiple check box"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify reject alert in delete multiple attendance by selecting single checkbox"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify accept alert in delete multiple attendance by selecting single checkbox"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify accept alert in delete multiple attendance by selecting multiple checkbox"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify reject alert in delete multiple attendance by selecting multiple checkbox"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Multiple Attendance Validation"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="262" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify sheet one is displayed on default in data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="228" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify right arrow is enable when sheet one is displayed in data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="207" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify right arrow is enable when sheet two is displayed in data table when entries are more than 10"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="227" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify left arrow is disable when sheet one is displayed in data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="193" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify left arrow is enable when sheet two is displayed in data table"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="170" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify right arrow is disable when sheet two is displayed in data table when entries are less than 10"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Data table should display page {int} when entries available")
public void data_table_should_display_page_when_entries_available(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Data table should display page {int} when entries available")
public void data_table_should_display_page_when_entries_available(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="168" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify pagination controls enabled"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="174" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify pagination controls disabled"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Pagination in manage attendance"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin is on dashboard page after Login' is undefined.
You can implement this step using the snippet(s) below:

@Given("Admin is on dashboard page after Login")
public void admin_is_on_dashboard_page_after_login() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="91" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to student page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Student" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on student page from attendance")
public void admin_should_able_to_land_on_student_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Student" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on student page from attendance")
public void admin_should_able_to_land_on_student_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="81" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to program page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Program" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on program page from attendance")
public void admin_should_able_to_land_on_program_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Program" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on program page from attendance")
public void admin_should_able_to_land_on_program_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="93" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to batch page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Batch" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on batch page from attendance")
public void admin_should_able_to_land_on_batch_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Batch" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on batch page from attendance")
public void admin_should_able_to_land_on_batch_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="90" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to user page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "User" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on user page from attendance")
public void admin_should_able_to_land_on_user_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "User" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on user page from attendance")
public void admin_should_able_to_land_on_user_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="87" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to assignment page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Assignment" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on Assignment page from attendance")
public void admin_should_able_to_land_on_assignment_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Assignment" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on Assignment page from attendance")
public void admin_should_able_to_land_on_assignment_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify admin is able to navigate from manage attendance to attendance page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Class" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on class page from attendance")
public void admin_should_able_to_land_on_class_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Class" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on class page from attendance")
public void admin_should_able_to_land_on_class_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-09-10T17:24:07 PDT" duration-ms="65" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify adminshould able to do logout function from manage attendance"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Navigation function validation from manage attendance page to other pages"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Admin clicks "Logout" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on login page from attendance")
public void admin_should_able_to_land_on_login_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Admin clicks "Logout" button in the navigation bar in attendance' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Admin clicks {string} button in the navigation bar in attendance")
public void admin_clicks_button_in_the_navigation_bar_in_attendance(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Admin should able to land on login page from attendance")
public void admin_should_able_to_land_on_login_page_from_attendance() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:17)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testrunners.TestNGTestRunner@7d8995e]" started-at="2023-09-10T17:24:07 PDT" name="tearDownClass" finished-at="2023-09-10T17:24:11 PDT" duration-ms="3792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testrunners.TestNGTestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
